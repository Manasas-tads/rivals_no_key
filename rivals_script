local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local ESPEnabled = false  -- Track if ESP is enabled
local AimbotEnabled = false -- Track if Aimbot is enabled

-- Create the UI container
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")  -- Ensure UI is in PlayerGui
screenGui.Name = "ESP_UI"

local uiContainer = Instance.new("Frame")
uiContainer.Size = UDim2.new(0, 250, 0, 270)  -- Initial size to make space for the buttons
uiContainer.Position = UDim2.new(0.5, -125, 0, 10)
uiContainer.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
uiContainer.BackgroundTransparency = 0.5
uiContainer.Parent = screenGui

-- Apply rounded corners using UICorner
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 15)  -- Round the corners of the container
uiCorner.Parent = uiContainer

-- Create the text label for ESP
local espTextLabel = Instance.new("TextLabel")
espTextLabel.Size = UDim2.new(0, 200, 0, 40)
espTextLabel.Position = UDim2.new(0.5, -espTextLabel.Size.X.Offset / 2, 0, 0)  -- Center the text
espTextLabel.Text = "ESP"
espTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
espTextLabel.BackgroundTransparency = 1
espTextLabel.Font = Enum.Font.SourceSans
espTextLabel.TextSize = 24
espTextLabel.TextXAlignment = Enum.TextXAlignment.Center  -- Center the text
espTextLabel.TextYAlignment = Enum.TextYAlignment.Center  -- Center vertically
espTextLabel.Parent = uiContainer

-- Create a button to toggle ESP
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 200, 0, 40)
toggleButton.Position = UDim2.new(0.5, -toggleButton.Size.X.Offset / 2, 0, 50)  -- Center the button
toggleButton.Text = "Enable ESP"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 128, 0)  -- Green color for OFF
toggleButton.Font = Enum.Font.SourceSans
toggleButton.TextSize = 24
toggleButton.Parent = uiContainer

-- Create UICorner for rounding the corners of the button
local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 20)  -- Round the corners of the button
buttonCorner.Parent = toggleButton

-- Create the text label for Aimbot
local aimbotTextLabel = Instance.new("TextLabel")
aimbotTextLabel.Size = UDim2.new(0, 200, 0, 40)
aimbotTextLabel.Position = UDim2.new(0.5, -aimbotTextLabel.Size.X.Offset / 2, 0, 100)  -- Position below ESP section
aimbotTextLabel.Text = "Aimbot"
aimbotTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
aimbotTextLabel.BackgroundTransparency = 1
aimbotTextLabel.Font = Enum.Font.SourceSans
aimbotTextLabel.TextSize = 24
aimbotTextLabel.TextXAlignment = Enum.TextXAlignment.Center  -- Center the text
aimbotTextLabel.TextYAlignment = Enum.TextYAlignment.Center  -- Center vertically
aimbotTextLabel.Parent = uiContainer

-- Create a button to toggle Aimbot
local aimbotButton = Instance.new("TextButton")
aimbotButton.Size = UDim2.new(0, 200, 0, 40)
aimbotButton.Position = UDim2.new(0.5, -aimbotButton.Size.X.Offset / 2, 0, 150)  -- Position below Aimbot label
aimbotButton.Text = "Enable Aimbot"
aimbotButton.TextColor3 = Color3.fromRGB(255, 255, 255)
aimbotButton.BackgroundColor3 = Color3.fromRGB(0, 128, 0)  -- Green color for OFF
aimbotButton.Font = Enum.Font.SourceSans
aimbotButton.TextSize = 24
aimbotButton.Parent = uiContainer

-- Create UICorner for rounding the corners of the aimbot button
local aimbotButtonCorner = Instance.new("UICorner")
aimbotButtonCorner.CornerRadius = UDim.new(0, 20)  -- Round the corners of the button
aimbotButtonCorner.Parent = aimbotButton

-- Create "Kill Script" Label
local killScriptLabel = Instance.new("TextLabel")
killScriptLabel.Size = UDim2.new(0, 200, 0, 40)
killScriptLabel.Position = UDim2.new(0.5, -killScriptLabel.Size.X.Offset / 2, 0, 200)  -- Position below aimbot section
killScriptLabel.Text = "Kill Script"
killScriptLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
killScriptLabel.BackgroundTransparency = 1
killScriptLabel.Font = Enum.Font.SourceSans
killScriptLabel.TextSize = 24
killScriptLabel.TextXAlignment = Enum.TextXAlignment.Center  -- Center the text
killScriptLabel.TextYAlignment = Enum.TextYAlignment.Center  -- Center vertically
killScriptLabel.Parent = uiContainer

-- Create a button to remove the script
local removeButton = Instance.new("TextButton")
removeButton.Size = UDim2.new(0, 200, 0, 40)
removeButton.Position = UDim2.new(0.5, -removeButton.Size.X.Offset / 2, 0, 250)  -- Position below the Kill Script label
removeButton.Text = "Remove Script"
removeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
removeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)  -- Red color for the kill button
removeButton.Font = Enum.Font.SourceSans
removeButton.TextSize = 24
removeButton.Parent = uiContainer

-- Create UICorner for rounding the corners of the remove button
local removeButtonCorner = Instance.new("UICorner")
removeButtonCorner.CornerRadius = UDim.new(0, 20)  -- Round the corners of the remove button
removeButtonCorner.Parent = removeButton

-- Function to highlight a player
local function highlightPlayer(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        if not player.Character:FindFirstChild("Highlight") then
            local highlight = Instance.new("Highlight")
            highlight.Parent = player.Character
            highlight.FillColor = Color3.fromRGB(255, 255, 0) -- Yellow color
            highlight.OutlineColor = Color3.fromRGB(0, 0, 0) -- Black outline
            highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop -- Visible through walls
        end
    end
end

-- Function to remove highlights and name tags
local function removeESP(player)
    if player.Character then
        if player.Character:FindFirstChild("Highlight") then
            player.Character.Highlight:Destroy()
        end
    end
end

-- Toggle ESP on and off
local function toggleESP()
    ESPEnabled = not ESPEnabled
    toggleButton.Text = ESPEnabled and "Disable ESP" or "Enable ESP"
    toggleButton.BackgroundColor3 = ESPEnabled and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(0, 128, 0)

    for _, player in pairs(Players:GetPlayers()) do
        if ESPEnabled then
            highlightPlayer(player)
        else
            removeESP(player)
        end
    end
end

-- Toggle Aimbot on and off
local function toggleAimbot()
    AimbotEnabled = not AimbotEnabled
    aimbotButton.Text = AimbotEnabled and "Disable Aimbot" or "Enable Aimbot"
    aimbotButton.BackgroundColor3 = AimbotEnabled and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(0, 128, 0)
end

-- Listen for new players joining
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        if ESPEnabled then
            highlightPlayer(player)
        end
    end)
end)

-- Kill Script button functionality
local function killScript()
    screenGui:Destroy()
end

-- Draggable UI functionality
local dragging = false
local dragStart = nil
local startPos = nil

uiContainer.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = uiContainer.Position
    end
end)

uiContainer.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        uiContainer.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

uiContainer.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Connect the buttons
toggleButton.MouseButton1Click:Connect(toggleESP)
aimbotButton.MouseButton1Click:Connect(toggleAimbot)
removeButton.MouseButton1Click:Connect(killScript)

-- Enhanced Aimbot Script
local aimKey = Enum.KeyCode.E
local aimRadius = 100
local aimSmoothness = 5
local mouse = LocalPlayer:GetMouse()

-- Get closest target function for aimbot
local function getClosestTarget()
    local closestTarget = nil
    local closestDistance = aimRadius

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance < closestDistance then
                closestDistance = distance
                closestTarget = player
            end
        end
    end

    return closestTarget
end

-- Aim at function for aimbot
local function aimAt(target)
    if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
        local targetPos = target.Character.HumanoidRootPart.Position + Vector3.new(0, 3, 0)
        local direction = (targetPos - LocalPlayer.Character.HumanoidRootPart.Position).unit
        local smoothDirection = LocalPlayer.Character.HumanoidRootPart.CFrame:lerp(CFrame.new(LocalPlayer.Character.HumanoidRootPart.Position, LocalPlayer.Character.HumanoidRootPart.Position + direction), aimSmoothness * RunService.RenderStepped:Wait())
        
        mouse.TargetFilter = target.Character
        LocalPlayer.Character.HumanoidRootPart.CFrame = smoothDirection
    end
end

-- Main loop for aimbot
RunService.RenderStepped:Connect(function()
    if AimbotEnabled then
        local target = getClosestTarget()
        aimAt(target)
    end
end)

print("Script loaded successfully!")
